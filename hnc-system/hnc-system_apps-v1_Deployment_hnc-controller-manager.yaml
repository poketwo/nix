apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    control-plane: controller-manager
  name: hnc-controller-manager
  namespace: hnc-system
spec:
  replicas: 1
  selector:
    matchLabels:
      control-plane: controller-manager
  template:
    metadata:
      annotations:
        prometheus.io/scrape: 'true'
      labels:
        control-plane: controller-manager
    spec:
      containers:
      - args:
        - --webhook-server-port=9443
        - --metrics-addr=:8080
        - --max-reconciles=10
        - --apiserver-qps-throttle=50
        - --excluded-namespace=kube-system
        - --excluded-namespace=kube-public
        - --excluded-namespace=hnc-system
        - --excluded-namespace=kube-node-lease
        - --nopropagation-label=cattle.io/creator=norman
        command:
        - /manager
        image: gcr.io/k8s-staging-multitenancy/hnc-manager:v1.1.0
        livenessProbe:
          failureThreshold: 1
          httpGet:
            path: /healthz
            port: 8081
          periodSeconds: 10
        name: manager
        ports:
        - containerPort: 9443
          name: webhook-server
          protocol: TCP
        - containerPort: 8080
          name: metrics
          protocol: TCP
        - containerPort: 8081
          name: healthz
          protocol: TCP
        readinessProbe:
          httpGet:
            path: /readyz
            port: 8081
          periodSeconds: 5
        resources:
          limits:
            cpu: 100m
            memory: 300Mi
          requests:
            cpu: 100m
            memory: 150Mi
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - ALL
          readOnlyRootFilesystem: true
          runAsNonRoot: true
          seccompProfile:
            type: RuntimeDefault
        startupProbe:
          failureThreshold: 100
          httpGet:
            path: /readyz
            port: 8081
          periodSeconds: 5
        volumeMounts:
        - mountPath: /tmp/k8s-webhook-server/serving-certs
          name: cert
          readOnly: true
      securityContext:
        fsGroup: 2000
        runAsNonRoot: true
        runAsUser: 1000
      terminationGracePeriodSeconds: 10
      volumes:
      - name: cert
        secret:
          defaultMode: 420
          secretName: webhook-server-cert

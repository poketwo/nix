apiVersion: apps/v1
kind: Deployment
metadata:
  annotations: {}
  labels:
    app.kubernetes.io/component: gateway
    app.kubernetes.io/instance: mimir
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: mimir
    app.kubernetes.io/version: 2.12.0
    helm.sh/chart: mimir-distributed-5.3.0
  name: mimir-gateway
  namespace: mimir
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/component: gateway
      app.kubernetes.io/instance: mimir
      app.kubernetes.io/name: mimir
  strategy:
    rollingUpdate:
      maxSurge: 15%
      maxUnavailable: 0
    type: RollingUpdate
  template:
    metadata:
      annotations:
        checksum/config: c3ddceb008511d72bb6389e89edd20a22e4939b128015cdc63266597cc734e32
      labels:
        app.kubernetes.io/component: gateway
        app.kubernetes.io/instance: mimir
        app.kubernetes.io/managed-by: Helm
        app.kubernetes.io/name: mimir
        app.kubernetes.io/version: 2.12.0
        helm.sh/chart: mimir-distributed-5.3.0
      namespace: mimir
    spec:
      containers:
      - envFrom:
        - secretRef:
            name: backblaze-b2-credentials
        image: docker.io/nginxinc/nginx-unprivileged:1.25-alpine
        imagePullPolicy: IfNotPresent
        name: nginx
        ports:
        - containerPort: 8080
          name: http-metrics
          protocol: TCP
        readinessProbe:
          httpGet:
            path: /ready
            port: http-metrics
          initialDelaySeconds: 15
          timeoutSeconds: 1
        resources: {}
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - ALL
          readOnlyRootFilesystem: true
        volumeMounts:
        - mountPath: /etc/nginx/nginx.conf
          name: nginx-config
          subPath: nginx.conf
        - mountPath: /tmp
          name: tmp
        - mountPath: /docker-entrypoint.d
          name: docker-entrypoint-d-override
      securityContext:
        fsGroup: 10001
        runAsGroup: 10001
        runAsNonRoot: true
        runAsUser: 10001
        seccompProfile:
          type: RuntimeDefault
      serviceAccountName: mimir
      terminationGracePeriodSeconds: 30
      topologySpreadConstraints:
      - labelSelector:
          matchLabels:
            app.kubernetes.io/component: gateway
            app.kubernetes.io/instance: mimir
            app.kubernetes.io/name: mimir
        maxSkew: 1
        topologyKey: kubernetes.io/hostname
        whenUnsatisfiable: ScheduleAnyway
      volumes:
      - configMap:
          items:
          - key: mimir.yaml
            path: mimir.yaml
          name: mimir-config
        name: config
      - configMap:
          name: mimir-runtime
        name: runtime-config
      - configMap:
          name: mimir-gateway-nginx
        name: nginx-config
      - emptyDir: {}
        name: docker-entrypoint-d-override
      - emptyDir: {}
        name: tmp

apiVersion: apps/v1
kind: Deployment
metadata:
  annotations: {}
  labels:
    app.kubernetes.io/component: distributor
    app.kubernetes.io/instance: mimir
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: mimir
    app.kubernetes.io/part-of: memberlist
    app.kubernetes.io/version: 2.12.0
    helm.sh/chart: mimir-distributed-5.3.0
  name: mimir-distributor
  namespace: mimir
spec:
  replicas: 2
  selector:
    matchLabels:
      app.kubernetes.io/component: distributor
      app.kubernetes.io/instance: mimir
      app.kubernetes.io/name: mimir
  strategy:
    rollingUpdate:
      maxSurge: 15%
      maxUnavailable: 0
    type: RollingUpdate
  template:
    metadata:
      annotations:
        checksum/config: 95c592bcf6dfdf7cffc29d0403d72a6b149c37ddb9e83a972a1e8c837bc7dcb6
      labels:
        app.kubernetes.io/component: distributor
        app.kubernetes.io/instance: mimir
        app.kubernetes.io/managed-by: Helm
        app.kubernetes.io/name: mimir
        app.kubernetes.io/part-of: memberlist
        app.kubernetes.io/version: 2.12.0
        helm.sh/chart: mimir-distributed-5.3.0
      namespace: mimir
    spec:
      containers:
      - args:
        - -target=distributor
        - -config.expand-env=true
        - -config.file=/etc/mimir/mimir.yaml
        - -server.grpc.keepalive.max-connection-age=60s
        - -server.grpc.keepalive.max-connection-age-grace=5m
        - -server.grpc.keepalive.max-connection-idle=1m
        - -shutdown-delay=90s
        env:
        - name: GOMAXPROCS
          value: '8'
        - name: JAEGER_REPORTER_MAX_QUEUE_SIZE
          value: '1000'
        envFrom:
        - secretRef:
            name: backblaze-b2-credentials
        image: grafana/mimir:2.12.0
        imagePullPolicy: IfNotPresent
        name: distributor
        ports:
        - containerPort: 8080
          name: http-metrics
          protocol: TCP
        - containerPort: 9095
          name: grpc
          protocol: TCP
        - containerPort: 7946
          name: memberlist
          protocol: TCP
        readinessProbe:
          httpGet:
            path: /ready
            port: http-metrics
          initialDelaySeconds: 45
        resources:
          limits:
            memory: 1Gi
          requests:
            cpu: 50m
            memory: 100Mi
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - ALL
          readOnlyRootFilesystem: true
        volumeMounts:
        - mountPath: /etc/mimir
          name: config
        - mountPath: /var/mimir
          name: runtime-config
        - mountPath: /data
          name: storage
        - mountPath: /active-query-tracker
          name: active-queries
      securityContext:
        fsGroup: 10001
        runAsGroup: 10001
        runAsNonRoot: true
        runAsUser: 10001
        seccompProfile:
          type: RuntimeDefault
      serviceAccountName: mimir
      terminationGracePeriodSeconds: 100
      topologySpreadConstraints:
      - labelSelector:
          matchLabels:
            app.kubernetes.io/component: distributor
            app.kubernetes.io/instance: mimir
            app.kubernetes.io/name: mimir
        maxSkew: 1
        topologyKey: kubernetes.io/hostname
        whenUnsatisfiable: ScheduleAnyway
      volumes:
      - configMap:
          items:
          - key: mimir.yaml
            path: mimir.yaml
          name: mimir-config
        name: config
      - configMap:
          name: mimir-runtime
        name: runtime-config
      - emptyDir: {}
        name: storage
      - emptyDir: {}
        name: active-queries

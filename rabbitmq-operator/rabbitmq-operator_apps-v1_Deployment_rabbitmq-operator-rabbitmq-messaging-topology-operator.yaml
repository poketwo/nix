apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app.kubernetes.io/component: messaging-topology-operator
    app.kubernetes.io/instance: rabbitmq-operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: rabbitmq-cluster-operator
    app.kubernetes.io/part-of: rabbitmq
    app.kubernetes.io/version: 1.14.2
    helm.sh/chart: rabbitmq-cluster-operator-4.3.18
  name: rabbitmq-operator-rabbitmq-messaging-topology-operator
  namespace: rabbitmq-operator
spec:
  replicas: 1
  revisionHistoryLimit: 10
  selector:
    matchLabels:
      app.kubernetes.io/component: messaging-topology-operator
      app.kubernetes.io/instance: rabbitmq-operator
      app.kubernetes.io/name: rabbitmq-cluster-operator
  strategy:
    type: RollingUpdate
  template:
    metadata:
      labels:
        app.kubernetes.io/component: messaging-topology-operator
        app.kubernetes.io/instance: rabbitmq-operator
        app.kubernetes.io/managed-by: Helm
        app.kubernetes.io/name: rabbitmq-cluster-operator
        app.kubernetes.io/part-of: rabbitmq
        app.kubernetes.io/version: 1.14.2
        helm.sh/chart: rabbitmq-cluster-operator-4.3.18
    spec:
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - podAffinityTerm:
              labelSelector:
                matchLabels:
                  app.kubernetes.io/component: messaging-topology-operator
                  app.kubernetes.io/instance: rabbitmq-operator
                  app.kubernetes.io/name: rabbitmq-cluster-operator
              topologyKey: kubernetes.io/hostname
            weight: 1
      automountServiceAccountToken: true
      containers:
      - args:
        - --metrics-bind-address=:8080
        command:
        - /manager
        env:
        - name: OPERATOR_NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        image: docker.io/bitnami/rmq-messaging-topology-operator:1.14.2-debian-12-r5
        imagePullPolicy: IfNotPresent
        livenessProbe:
          failureThreshold: 5
          initialDelaySeconds: 5
          periodSeconds: 30
          successThreshold: 1
          tcpSocket:
            port: http-metrics
          timeoutSeconds: 5
        name: rabbitmq-cluster-operator
        ports:
        - containerPort: 9443
          name: https-webhook
          protocol: TCP
        - containerPort: 8080
          name: http-metrics
          protocol: TCP
        readinessProbe:
          failureThreshold: 5
          httpGet:
            path: /metrics
            port: http-metrics
          initialDelaySeconds: 5
          periodSeconds: 30
          successThreshold: 1
          timeoutSeconds: 5
        resources:
          limits:
            cpu: 150m
            ephemeral-storage: 2Gi
            memory: 192Mi
          requests:
            cpu: 100m
            ephemeral-storage: 50Mi
            memory: 128Mi
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - ALL
          privileged: false
          readOnlyRootFilesystem: true
          runAsGroup: 1001
          runAsNonRoot: true
          runAsUser: 1001
          seccompProfile:
            type: RuntimeDefault
        volumeMounts:
        - mountPath: /tmp/k8s-webhook-server/serving-certs
          name: cert
          readOnly: true
      dnsPolicy: ClusterFirst
      hostNetwork: false
      securityContext:
        fsGroup: 1001
        fsGroupChangePolicy: Always
        supplementalGroups: []
        sysctls: []
      serviceAccountName: rabbitmq-operator-rabbitmq-messaging-topology-operator
      volumes:
      - name: cert
        secret:
          defaultMode: 420
          secretName: rabbitmq-operator-rabbitmq-messaging-topology-operator-webhook
